/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author armen
 */
public class ServeurInterface extends javax.swing.JFrame {

    //<editor-fold defaultstate="collapsed" desc="Pour la gestion jList et popup">
    private DefaultListModel<String> dm;
    private final JPopupMenu pop;
    private String row="";
    private int index=0;
    //</editor-fold>
    
    /**
     * Creates new form ServeurInterface
     */
    public ServeurInterface() {
        initComponents();  
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/assets/logoServeur2.png")));
        this.dm = new DefaultListModel<>();
        this.pop = new JPopupMenu();
        //addPopupToConnectedusers();
    }
    
    
    /**
     * Ajoute le texte donné à la fin du JTextPane
     * @param jTP le TextPane dans lequel il faut ajouter le text
     * @param text le text a ajouter dans le TextPane
     * @ref:  https://stackoverflow.com/questions/4059198/jtextpane-appending-a-new-string?answertab=active#tab-top
     */
    private void appendJTextPane(JTextPane jTP, String text){
        HTMLDocument document = (HTMLDocument)jTP.getDocument();
        HTMLEditorKit editorKit = (HTMLEditorKit)jTP.getEditorKit();
        try {
          editorKit.insertHTML(document, document.getLength(), text, 0, 0, null);
          jTP.setCaretPosition(document.getLength());
        } catch(Exception e){
            System.out.println("Erreur lors de l'ajout du text dans le TextPane: " + e);
        }
    }

    
    public void logMessage(String mgs){
        this.appendJTextPane(this.logs, mgs);
    }

    public JTextField getNbUser() {
        return nbUser;
    }
    
    //<editor-fold defaultstate="collapsed" desc="Gestion du jList pour afficher les utilisateurs connectés avec un menu popup">
    /**
     * Ajoute un nouveau element dans le jList qui contiens les utilisateurs connectés
     * @param name le nom a ajouter
     */
    public void addToConnectedUsers(String name){
        dm.addElement(name);
        this.connectedUsers.setModel(dm);
    }

    
    /**
     * Efface tous le contenu du jList connectedUsers 
     */
    public void cleanConnectedUsers(){
        dm.clear();
        this.connectedUsers.setModel(dm);
    }
    
    /**
     * Ajoute la fonctionalité du poup
     */
    private void addPopupToConnectedusers(){
        // a changer
        JMenuItem show = new JMenuItem("Show");
        //JMenuItem delete = new JMenuItem("Delete");        
        JMenuItem privateMessage = new JMenuItem("Envoyer un message privé");
        JMenuItem banUser = new JMenuItem("Bannir l'utilisateur");

        
        //add
        this.pop.add(show);
        this.pop.add(privateMessage);
        this.pop.add(banUser);
        //this.pop.add(delete);
        
        //events
        show.addActionListener((ActionEvent e) -> {
            // faire ce qui doir etre fait
            JOptionPane.showMessageDialog(null, "Click sur: " + row );
        });
        
        banUser.addActionListener((ActionEvent e) -> {
            String user = dm.getElementAt(index).toString();
            //this.txtUserInput.setText("!ban "+ user);
        });
        
        privateMessage.addActionListener((ActionEvent e) -> {
            String user = dm.getElementAt(index).toString();
            //this.txtUserInput.setText("@"+user + " ");
        });
        
//        delete.addActionListener((ActionEvent e) -> {
//            dm.removeElementAt(index);
//        });
    }
//</editor-fold>
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logs = new javax.swing.JTextPane();
        serverLogLabel = new javax.swing.JLabel();
        nbUserLabel = new javax.swing.JLabel();
        nbUser = new javax.swing.JTextField();
        connecedUserLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        connectedUsers = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EsiChat Serveur");
        setResizable(false);

        logs.setEditable(false);
        logs.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(logs);

        serverLogLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        serverLogLabel.setText("Server Logs");

        nbUserLabel.setText("Nombre d'utilisateurs");

        nbUser.setEditable(false);
        nbUser.setText("0");

        connecedUserLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        connecedUserLabel.setText("Utilisateurs Connectés");

        connectedUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectedUsersMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(connectedUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(serverLogLabel)
                        .addGap(168, 168, 168)
                        .addComponent(nbUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nbUser, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(connecedUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(serverLogLabel)
                        .addComponent(nbUserLabel)
                        .addComponent(nbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(connecedUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectedUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectedUsersMouseClicked
        // si la selection n'est pas vide
        if(!this.connectedUsers.isSelectionEmpty()){
            this.connectedUsers.setSelectedIndex(this.connectedUsers.locationToIndex(evt.getPoint()));
        
            row = this.connectedUsers.getSelectedValue().toString();
            index = this.connectedUsers.getSelectedIndex();
                
            // si click droit et l'element selectioné est l'index
            if(SwingUtilities.isRightMouseButton(evt) && this.connectedUsers.locationToIndex(evt.getPoint()) == index){
                pop.show(this.connectedUsers, evt.getX(), evt.getY());
            }
       }
    }//GEN-LAST:event_connectedUsersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServeurInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServeurInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServeurInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServeurInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                JFrame ServeurGui = new ServeurInterface();
//                ServeurGui.setVisible(true);
//                ServeurGui.setLocationRelativeTo(null);
//                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel connecedUserLabel;
    private javax.swing.JList<String> connectedUsers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane logs;
    private javax.swing.JTextField nbUser;
    private javax.swing.JLabel nbUserLabel;
    private javax.swing.JLabel serverLogLabel;
    // End of variables declaration//GEN-END:variables
}
